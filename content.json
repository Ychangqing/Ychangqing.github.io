{"meta":{"title":"Hexo","subtitle":"","description":"","author":"Ychangqing","url":"https://ychangqing.github.io","root":"/"},"pages":[{"title":"categories","date":"2020-07-23T03:11:46.000Z","updated":"2020-07-23T03:11:46.846Z","comments":true,"path":"categories/index.html","permalink":"https://ychangqing.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-07-23T03:10:48.000Z","updated":"2020-07-23T03:15:30.516Z","comments":false,"path":"tags/index.html","permalink":"https://ychangqing.github.io/tags/index.html","excerpt":"","text":""},{"title":"项目","date":"2020-07-23T03:32:50.363Z","updated":"2020-07-23T03:32:50.363Z","comments":false,"path":"repository/index.html","permalink":"https://ychangqing.github.io/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"日常总结","slug":"daily-summary","date":"2020-07-23T03:11:50.626Z","updated":"2020-07-23T06:59:48.275Z","comments":true,"path":"2020/07/23/daily-summary/","link":"","permalink":"https://ychangqing.github.io/2020/07/23/daily-summary/","excerpt":"","text":"总结了一些在工作中常用js工具函数 更新：函数越来越多，直接将其打包放在GitHub中，日后使用时直接安装npm包 npm地址1npm install js-tool-function 开始去重插入123456pushIfNotExist = function(array, elem) &#123; if (array.indexOf(elem) == -1) &#123; array.push(elem); &#125; return array;&#125; 去重合并数组12345pushApply = function(a, b=[]) &#123; a.forEach(function(value) &#123; pushIfNotExist(b, value); &#125;);&#125; 美化日期间隔123456789101112131415161718192021222324timeDifference = function(previous) &#123; const current = Date.now(); let msPerMinute = 60 * 1000; let msPerHour = msPerMinute * 60; let msPerDay = msPerHour * 24; let msPerMonth = msPerDay * 30; let msPerYear = msPerDay * 365; let elapsed = current - previous; if (elapsed &lt; msPerMinute) &#123; return '刚刚'; &#125; else if (elapsed &lt; msPerHour) &#123; return Math.round(elapsed / msPerMinute) + ' 分钟前'; &#125; else if (elapsed &lt; msPerDay) &#123; return Math.round(elapsed / msPerHour) + ' 小时前'; &#125; else if (elapsed &lt; msPerMonth) &#123; return Math.round(elapsed / msPerDay) + ' 天前'; &#125; else if (elapsed &lt; msPerYear) &#123; return Math.round(elapsed / msPerMonth) + ' 月前'; &#125; else &#123; return '一年前'; &#125;&#125; 编译阿里云OSS文件URL 我不知道为什么阿里底层存储URL的逻辑会是这样，但是如果文件名中带有复杂字符串，浏览器默认的编译结果和阿里OSS编译的结果不一样，导致无法打开文件，实际上文件确实已经存储在OSS中了 123456getAliOSSUrl = function(url) &#123; return encodeURIComponent(url) .replace(/%2F/g, '/') .replace(/\\+/g, '%2B') .replace('%3A', ':')&#125;, 获取字符串的HashCode 使用场景：有十个长度的颜色的数组，colorArr = [#000, #fff, …]，数据库中有一百个title，让每个title都有属于自己的颜色： colorArr[getHashCode(title) % colorArr.length] 1234567891011getHashCode = function(str, caseSensitive) &#123; if (!caseSensitive) &#123; str = str.toLowerCase(); &#125; let hash = 1315423911, i, ch; for (i = str.length - 1; i &gt;= 0; i--) &#123; ch = str.charCodeAt(i); hash ^= ((hash &lt;&lt; 5) + ch + (hash &gt;&gt; 2)); &#125; return (hash &amp; 0x7FFFFFFF);&#125;, 数组判断是否包含123hasElement = function(array, elem) &#123; return isNonEmptyArray(array) &amp;&amp; array.indexOf(elem) != -1;&#125; 判断是否为IOS系统1234isIOS = function() &#123; const u = navigator.userAgent return !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/)&#125; 判断是否为Android系统1234isAndroid = function() &#123; const u = navigator.userAgent return u.indexOf('Android') &gt; -1 || u.indexOf('Adr') &gt; -1&#125; 一个简单的debounce函数，用于触底加载1234567891011121314151617debounce = function(func, wait, immediate) &#123; let timeout return function(e) &#123; let context = e let later = function() &#123; timeout = null if (!immediate) &#123; func.apply(context) &#125; &#125; clearTimeout(timeout) timeout = setTimeout(later, wait) if (immediate &amp;&amp; !timeout) &#123; func.apply(context) &#125; &#125;&#125; 简单的模版渲染函数12345678910111213// \"Hello, &#123;name&#125;, are you feeling &#123;adjective&#125;?\".formatUnicorn(&#123;name:\"Gabriel\", adjective: \"OK\"&#125;);String.prototype.formatUnicorn = String.prototype.formatUnicorn || function () &#123; let str = this.toString(); if (arguments.length) &#123; let t = typeof arguments[0]; let key; let args = (\"string\" === t || \"number\" === t) ? Array.prototype.slice.call(arguments) : arguments[0]; for (key in args) &#123; str = str.replace(new RegExp(\"\\\\&#123;\" + key + \"\\\\&#125;\", \"gi\"), args[key]); &#125; &#125; return str;&#125;; 数组转对象1234567array2object = function(array = [], keys = &#123;&#125;) &#123; let res = &#123;&#125; for (let i = 0; i &lt; array.length; i++) &#123; res[keys[i]] = true; &#125; return res;&#125;","categories":[],"tags":[{"name":"JS常用工具函数","slug":"JS常用工具函数","permalink":"https://ychangqing.github.io/tags/JS%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"},{"name":"服务器搭建","slug":"服务器搭建","permalink":"https://ychangqing.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"},{"name":"webpack配置","slug":"webpack配置","permalink":"https://ychangqing.github.io/tags/webpack%E9%85%8D%E7%BD%AE/"},{"name":"每日一题","slug":"每日一题","permalink":"https://ychangqing.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"}]}],"categories":[],"tags":[{"name":"JS常用工具函数","slug":"JS常用工具函数","permalink":"https://ychangqing.github.io/tags/JS%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"},{"name":"服务器搭建","slug":"服务器搭建","permalink":"https://ychangqing.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"},{"name":"webpack配置","slug":"webpack配置","permalink":"https://ychangqing.github.io/tags/webpack%E9%85%8D%E7%BD%AE/"},{"name":"每日一题","slug":"每日一题","permalink":"https://ychangqing.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"}]}